@import 'variables.less';

// Assuming the existence of a @2x variant of the url in question, apply a background-image
// that automatically selects the correct resolution depending on the current screen.
.retina-background(@url) {
  background-image+: ~`"-webkit-image-set(url(@{url}) 1x, url('" + @{url}.replace(/(\.[^.]*)$/, '@2x$1') + "') 2x)"`;
}

// Turn the element into a Semantic UI icon with the given code (e.g. "\f02e")
.semanticIcon(@content) {
  content: @content;
  font-family: 'Icons';
  font-style: normal;
  font-weight: 400;
  text-decoration: inherit;
  speak: none;
  -webkit-font-smoothing: antialiased;
  backface-visibility: hidden;
}

// FIXME: pointer-events isn't actually animatable on chromium, not even discretely... look for another way to block interactivity during the animation?

.fadeInTransition(@duration, @easing: ease, @delay: 0s) {
  transition+: opacity @duration @easing @delay, visibility @duration step-start @delay, pointer-events @duration step-end @delay;
  opacity: 1;
  visibility: visible;
  pointer-events: auto;
}
.fadeOutTransition(@duration, @easing: ease, @delay: 0s) {
  transition+: opacity @duration @easing @delay, visibility @duration step-end @delay, pointer-events @duration step-start @delay;
  opacity: 0;
  visibility: hidden;
  pointer-events: none;
}
