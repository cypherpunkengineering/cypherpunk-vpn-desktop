@knobSize: 50px;
@sliderPadding: 5px;
@sliderWidth: 120px;
@sliderHeight: @knobSize + @sliderPadding * 2;
@framePadding: 8px;
@frameEdge: 8px;
@frameWidth: (@sliderWidth + @framePadding * 2 + @frameEdge * 2);
@frameHeight: (@sliderHeight + @framePadding * 2);
@pipeWidth: 500px;


.pipeBackground(@color) {
  background: linear-gradient(to right,
    @color,
    fade(@color,25%) (@pipeWidth / 2 - @frameWidth / 2 - 100px),
    @color (@pipeWidth / 2 - @frameWidth / 2 + @frameEdge),
    transparent (@pipeWidth / 2 - @frameWidth / 2 + @frameEdge),
    transparent (@pipeWidth / 2 + @frameWidth / 2 - @frameEdge),
    @color (@pipeWidth / 2 + @frameWidth / 2 - @frameEdge),
    fade(@color,25%) (@pipeWidth / 2 + @frameWidth / 2 + 100px),
    @color
  );
}


.connect-button {
  position: absolute;
  left: 50%;
  top: 180px;
  transform: translate(-50%,-50%);
  width: @frameWidth;
  height: @frameHeight;
  cursor: pointer;

  /*
  * {
    animation-direction: reverse;
    animation-duration: 1s;
    animation-fill-mode: both;
  }
  */

  opacity: 1;
  transition: 0.5s opacity;

  &.hidden {
    opacity: 0;
    pointer-events: none;
  }

  .bg {
    opacity: 0.25;
    transition: opacity 1s ease-out;
  }

  .pipe {
    position: absolute;
    left: 50%;
    top: (@frameHeight / 2);
    transform: translate(-50%,-50%);
    width: @pipeWidth;
    height: 4px;
    .pipeBackground(cyan);
    transition: transform 1s ease;
  }

  .dot {
    position: absolute;
    top: (@frameHeight / 2 - 2px);
    left: -(@pipeWidth / 2 - @frameWidth / 2 + 20px);
    width: 40px;
    height: 4px;
    background: linear-gradient(to right, transparent, white, white, transparent);
    //background: radial-gradient(ellipse closest-side, white, transparent);
    animation: connect-pipe-dot 1.2s linear;
    animation-iteration-count: 1;
    opacity: 0;
    transition: opacity 0.5s;
  }

  .row1, .row2 {
    font-size: 10px;
    font-weight: 500;
    letter-spacing: 1px;
    line-height: 12px;
    transform: translate3d(0,0,0);
    width: auto;
    position: absolute;
    white-space: pre;
    margin-left: -100px;
    .is-focused & {
      animation-play-state: running;
    }
    visibility: hidden;
    opacity: 0;
    transition: opacity 0.5s, visibility 0.5s step-end;
  }
  .row1 {
    animation: 20s linear infinite paused marquee;
    top: 25px;
    color: #7ffffb;
  }
  .row2 {
    animation: 20s linear reverse infinite paused marquee;
    top: 37px;
    color: #5fbfbb;
  }

  .frame {
    position: absolute;
    border-radius: 100px;
    border: 8px solid cyan;
    border-width: 0px 8px;
    width: @frameWidth;
    height: @frameHeight;
    padding: @framePadding;
    transition: padding 1s ease, border 0.5s ease-in, width 1s, margin 1s;
  }

  .slider {
    position: absolute;
    top: @framePadding;
    left: (@framePadding + @frameEdge);
    width: @sliderWidth;
    height: @sliderHeight;
    padding: @sliderPadding;
    border-radius: 100px;
    background: rgba(0,0,0,0.5);
    border: 3px solid rgba(0,255,255,0.2);

    transition: background 1s, box-shadow 1s, border 1s;
  }
  .knob {
    position: absolute;
    left: (@frameEdge + @framePadding + @sliderPadding);
    top: (@framePadding + @sliderPadding);
    width: @knobSize;
    height: @knobSize;
    border-radius: 100px;
    background: linear-gradient(135deg,cyan,darkcyan);

    transition: transform 0.5s ease, box-shadow 0.5s ease;
  }

  &.on {
    .bg {
      opacity: 1 !important;
      transition: opacity 1s ease-in-out !important;
    }
    .frame {
      padding: 0px;
      border: 9px solid white;
      opacity: 1;
      margin: 0 8px;
      width: (@sliderWidth + @framePadding * 2);
      transition: border-color 0.5s 0.2s ease-out, border-width 0.35s 0.1s cubic-bezier(0, 0.2, 0.5, 0.4), width 0.4s 0.1s ease-in-out, margin 0.4s 0.1s ease-in-out;
    }
    .slider {
      background: rgba(0,128,128,0.5);
      box-shadow: 0 0 80px rgba(0,255,255,0.5);
      border: 3px solid rgba(128,255,255,0.5);
      transition-duration: 1s !important;
    }
    .knob {
      transform: translateX((@sliderWidth - 2 * @sliderPadding - @knobSize));
      box-shadow: inset 0 0 30px 5px white;
    }
  }
  &.on.connecting {
    .dot {
      .is-focused & { animation-iteration-count: infinite; }
      opacity: 1;
      transition: opacity 1s 0.5s;
    }
  }
  &.on.connected {
    .pipe {
      transform: translate(-50%,-50%) scale(0.9, 10);
      transition-delay: 0.5s;
      animation: connect-pipe-connected 0.8s linear;
    }
    .row1, .row2 {
      visibility: visible;
      opacity: 0.5;
      transition: opacity 2s 0.5s, visibility 2s 0.5s step-start;
    }
  }
  &.off.disconnecting {
    .bg {
      animation: connect-bg-disconnecting 1s linear infinite paused;
      .is-focused & { animation-play-state: running; }
    }
    .dot {
      opacity: 0 !important;
      visibility: hidden;
      transition: opacity 0.5s, visibility 0.5 step-end;
    }
    .pipe {
      transform: translate(-50%,-50%) scale(1, 4);
      animation: connect-pipe-disconnecting 2s linear both;
    }
  }

  &:hover {
    .bg {
      opacity: 0.5;
      transition: opacity 0.3s;
    }
    .slider {
      border-color: rgba(0,255,255,0.5);
      transition-duration: 0.3s;
    }
  }
}

@keyframes connect-pipe-dot {
  0% { transform: translateX(30px); animation-timing-function: cubic-bezier(0.5,0,1,0.5); }
  40% { transform: translateX(@pipeWidth / 2 - @sliderWidth / 2 - 20px); }
  43% { transform: translateX(@pipeWidth / 2 - @sliderWidth / 2 - 5px) scale(0.2, 1); }
  46% { transform: translateX(@pipeWidth / 2 - @sliderWidth / 2 + 20px) scale(0.2, 16); }
  50% { transform: translateX(@pipeWidth / 2) scale(0.2, 16); }
  54% { transform: translateX(@pipeWidth / 2 + @sliderWidth / 2 - 20px) scale(0.2, 16); }
  57% { transform: translateX(@pipeWidth / 2 + @sliderWidth / 2 + 5px) scale(0.2, 1); }
  60% { transform: translateX(@pipeWidth / 2 + @sliderWidth / 2 + 20px); animation-timing-function: cubic-bezier(0,0.5,0.5,1); }
  100% { transform: translateX(470px); }
}

@keyframes connect-pipe-connected {
  0% { .pipeBackground(cyan); }
  10% { .pipeBackground(white); }
  20% { .pipeBackground(cyan); }
  30% { .pipeBackground(white); }
  40% { .pipeBackground(cyan); }
  50% { .pipeBackground(white); }
  60% { .pipeBackground(cyan); }
  70% { .pipeBackground(white); }
  80% { .pipeBackground(cyan); }
  100% { .pipeBackground(cyan); }
}

@keyframes connect-pipe-disconnecting {
  0% { transform: translate(-50%,-50%) scale(0.9, 10); }
  10% { transform: translate(-50%,-50%) scale(1, 8); }
  100% { transform: translate(-50%,-50%); }
}

@keyframes connect-bg-disconnecting {
  0% { opacity: 1; }
  50% { opacity: 0.5; }
  100% { opacity: 1; }
}
